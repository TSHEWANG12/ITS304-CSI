That's number 2.  Keep going!
Halfway there!
try

Breakpoint 1, 0x000000000040100e in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
=> 0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) x/s 0x4025b7
0x4025b7:       "%d %d"
(gdb) r ans.txt
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /mnt/c/Users/Tshelde/Desktop/Assignmentbomb/Assignment 1/bomb002/bomb ans.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
Halfway there!
1 2

Breakpoint 1, 0x000000000040100e in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
=> 0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) u *0x000000000040102a
0x000000000040102a in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
=> 0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) i r
rax            0x0                 0
rbx            0x7ffffffee338      140737488282424
rcx            0x7ffffffee220      140737488282144
rdx            0x7ffffffee224      140737488282148
rsi            0x3                 3
rdi            0x603890            6305936
rbp            0x0                 0x0
rsp            0x7ffffffee220      0x7ffffffee220
r8             0x603890            6305936
r9             0x7c                124
r10            0x7fffff7d0770      140737479772016
r11            0x7fffff7d0770      140737479772016
r12            0x400c60            4197472
r13            0x7ffffffee330      140737488282416
r14            0x0                 0
r15            0x0                 0
rip            0x40102a            0x40102a <phase_4+28>
eflags         0x246               [ PF ZF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
(gdb) ni
0x000000000040102f in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
=> 0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) ni
0x0000000000401034 in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
=> 0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) i r
rax            0x2                 2
rbx            0x7ffffffee338      140737488282424
rcx            0x0                 0
rdx            0x7ffffffee220      140737488282144
rsi            0x0                 0
rdi            0x7ffffffedbd0      140737488280528
rbp            0x0                 0x0
rsp            0x7ffffffee220      0x7ffffffee220
r8             0xffffffff          4294967295
r9             0x0                 0
r10            0x7fffff74eac0      140737479240384
r11            0x0                 0
r12            0x400c60            4197472
r13            0x7ffffffee330      140737488282416
r14            0x0                 0
r15            0x0                 0
rip            0x401034            0x401034 <phase_4+38>
eflags         0x206               [ PF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
(gdb) ni
0x0000000000401037 in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
=> 0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) ni
0x0000000000401039 in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
=> 0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) i r
rax            0x2                 2
rbx            0x7ffffffee338      140737488282424
rcx            0x0                 0
rdx            0x7ffffffee220      140737488282144
rsi            0x0                 0
rdi            0x7ffffffedbd0      140737488280528
rbp            0x0                 0x0
rsp            0x7ffffffee220      0x7ffffffee220
r8             0xffffffff          4294967295
r9             0x0                 0
r10            0x7fffff74eac0      140737479240384
r11            0x0                 0
r12            0x400c60            4197472
r13            0x7ffffffee330      140737488282416
r14            0x0                 0
r15            0x0                 0
rip            0x401039            0x401039 <phase_4+43>
eflags         0x246               [ PF ZF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
(gdb) u *  0x000000000040103f
0x000000000040103f in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
=> 0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) i r
rax            0x0                 0
rbx            0x7ffffffee338      140737488282424
rcx            0x0                 0
rdx            0x7ffffffee220      140737488282144
rsi            0x0                 0
rdi            0x7ffffffedbd0      140737488280528
rbp            0x0                 0x0
rsp            0x7ffffffee220      0x7ffffffee220
r8             0xffffffff          4294967295
r9             0x0                 0
r10            0x7fffff74eac0      140737479240384
r11            0x0                 0
r12            0x400c60            4197472
r13            0x7ffffffee330      140737488282416
r14            0x0                 0
r15            0x0                 0
rip            0x40103f            0x40103f <phase_4+49>
eflags         0x246               [ PF ZF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
(gdb) ni
0x0000000000401042 in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
=> 0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) ni
0x0000000000401049 in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
=> 0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) ni
0x000000000040104c in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
=> 0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
   0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) u * 0x0000000000401056
0x0000000000401056 in phase_4 ()
(gdb) disas
Dump of assembler code for function phase_4:
   0x000000000040100e <+0>:     sub    $0x18,%rsp
   0x0000000000401012 <+4>:     mov    %fs:0x28,%rax
   0x000000000040101b <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401020 <+18>:    xor    %eax,%eax
   0x0000000000401022 <+20>:    mov    %rsp,%rcx
   0x0000000000401025 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040102a <+28>:    mov    $0x4025b7,%esi
   0x000000000040102f <+33>:    callq  0x400bb0 <__isoc99_sscanf@plt>
   0x0000000000401034 <+38>:    cmp    $0x2,%eax
   0x0000000000401037 <+41>:    jne    0x401044 <phase_4+54>
   0x0000000000401039 <+43>:    mov    (%rsp),%eax
   0x000000000040103c <+46>:    sub    $0x2,%eax
   0x000000000040103f <+49>:    cmp    $0x2,%eax
   0x0000000000401042 <+52>:    jbe    0x401049 <phase_4+59>
   0x0000000000401044 <+54>:    callq  0x401438 <explode_bomb>
   0x0000000000401049 <+59>:    mov    (%rsp),%esi
   0x000000000040104c <+62>:    mov    $0x5,%edi
   0x0000000000401051 <+67>:    callq  0x400fd3 <func4>
=> 0x0000000000401056 <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040105a <+76>:    je     0x401061 <phase_4+83>
   0x000000000040105c <+78>:    callq  0x401438 <explode_bomb>
   0x0000000000401061 <+83>:    mov    0x8(%rsp),%rax
   0x0000000000401066 <+88>:    xor    %fs:0x28,%rax
   0x000000000040106f <+97>:    je     0x401076 <phase_4+104>
   0x0000000000401071 <+99>:    callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401076 <+104>:   add    $0x18,%rsp
   0x000000000040107a <+108>:   retq
End of assembler dump.
(gdb) i r
rax            0x18                24
rbx            0x7ffffffee338      140737488282424
rcx            0x0                 0
rdx            0x7ffffffee220      140737488282144
rsi            0x2                 2
rdi            0x1                 1
rbp            0x0                 0x0
rsp            0x7ffffffee220      0x7ffffffee220
r8             0xffffffff          4294967295
r9             0x0                 0
r10            0x7fffff74eac0      140737479240384
r11            0x0                 0
r12            0x400c60            4197472
r13            0x7ffffffee330      140737488282416
r14            0x0                 0
r15            0x0                 0 
rip            0x401056            0x401056 <phase_4+72>
eflags         0x206               [ PF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
(gdb) r ans.txt
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /mnt/c/Users/Tshelde/Desktop/Assignmentbomb/Assignment 1/bomb002/bomb ans.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
Halfway there!
24 2

Breakpoint 1, 0x000000000040100e in phase_4 ()
(gdb) d
Delete all breakpoints? (y or n) y
(gdb) r ans.txt
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /mnt/c/Users/Tshelde/Desktop/Assignmentbomb/Assignment 1/bomb002/bomb ans.txt
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Phase 1 defused. How about the next one?
That's number 2.  Keep going!
Halfway there!
24 2
So you got that one.  Try this one.
